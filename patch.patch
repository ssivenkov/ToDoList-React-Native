Index: src/components/navigation/tasksNavigation/types.ts
===================================================================
diff --git a/src/components/navigation/tasksNavigation/types.ts b/src/components/navigation/tasksNavigation/types.ts
deleted file mode 100644
--- a/src/components/navigation/tasksNavigation/types.ts	(revision e320ecf02c427e7a8360fac5e05183264c29c785)
+++ /dev/null	(revision e320ecf02c427e7a8360fac5e05183264c29c785)
@@ -1,4 +0,0 @@
-export type TabParamListType = {
-  'Todo tasks': undefined;
-  'Done tasks': undefined;
-};
Index: src/components/navigation/tasksNavigation/screens/TodoTaskScreen/TodoTaskScreen.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/tasksNavigation/screens/TodoTaskScreen/TodoTaskScreen.tsx b/src/components/navigation/tasksNavigation/screens/TodoTaskScreen/TodoTaskScreen.tsx
new file mode 100644
--- /dev/null	(date 1647594391240)
+++ b/src/components/navigation/tasksNavigation/screens/TodoTaskScreen/TodoTaskScreen.tsx	(date 1647594391240)
@@ -0,0 +1,48 @@
+import React from 'react';
+import {FlatList, ListRenderItem, Text, View} from 'react-native';
+import {useSelector} from 'react-redux';
+import {TaskListType} from 'store/reducers/taskListReducer/types';
+import {getTaskList} from '../../../../../store/selectors/taskListSelectors';
+import {ReturnComponentType} from '../../../../../types/common/returnComponentType';
+import {TaskList} from '../../../../common/taskList/TaskList';
+import {styles} from './styles';
+
+export const TodoTasksScreen = (): ReturnComponentType => {
+  const taskLists = useSelector(getTaskList);
+  const toDoTaskLists = taskLists.filter((taskList) => {
+    if (taskList.showInToDo || taskList.tasks.some((task) => !task.isDone)) {
+      return taskList;
+    }
+  });
+
+  const toDoTaskListRenderItem: ListRenderItem<TaskListType> = ({
+    item,
+  }): ReturnComponentType => {
+    const toDoTasks = item.tasks && item.tasks.filter((task) => !task.isDone);
+    return (
+      <TaskList
+        isTodoTaskList={true}
+        taskListId={item.id}
+        taskListTitle={item.title}
+        taskListPropsTasks={toDoTasks}
+        fullTaskList={item}
+      />
+    );
+  };
+
+  return (
+    <>
+      {toDoTaskLists && toDoTaskLists.length > 0 ? (
+        <View style={styles.tasksListContainer}>
+          <FlatList data={toDoTaskLists} renderItem={toDoTaskListRenderItem} />
+        </View>
+      ) : (
+        <View style={styles.nullContentContainer}>
+          <Text style={styles.nullContentText}>
+            Todo task lists is not found
+          </Text>
+        </View>
+      )}
+    </>
+  );
+};
Index: src/components/navigation/tasksNavigation/screens/DoneTaskScreen/styles.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/tasksNavigation/screens/DoneTaskScreen/styles.ts b/src/components/navigation/tasksNavigation/screens/DoneTaskScreen/styles.ts
new file mode 100644
--- /dev/null	(date 1647591853503)
+++ b/src/components/navigation/tasksNavigation/screens/DoneTaskScreen/styles.ts	(date 1647591853503)
@@ -0,0 +1,26 @@
+import {StyleSheet, TextStyle, ViewStyle} from 'react-native';
+import {taskListMarginVertical} from '../../../../common/taskList/styles';
+
+type DoneTasksScreenStylesType = {
+  tasksListContainer: ViewStyle;
+  nullContentContainer: ViewStyle;
+  nullContentText: TextStyle;
+};
+
+export const styles = StyleSheet.create<DoneTasksScreenStylesType>({
+  tasksListContainer: {
+    backgroundColor: '#eee',
+    paddingVertical: taskListMarginVertical,
+  },
+
+  nullContentContainer: {
+    height: '100%',
+    alignItems: 'center',
+    justifyContent: 'center',
+  },
+
+  nullContentText: {
+    fontSize: 22,
+    color: '#000',
+  },
+});
Index: src/components/common/buttons/CustomIconButton.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/common/buttons/CustomIconButton.tsx b/src/components/common/buttons/CustomIconButton.tsx
--- a/src/components/common/buttons/CustomIconButton.tsx	(revision e320ecf02c427e7a8360fac5e05183264c29c785)
+++ b/src/components/common/buttons/CustomIconButton.tsx	(date 1647594182410)
@@ -1,6 +1,6 @@
 import {CustomIconButtonPropsType} from 'components/common/buttons/type';
 import React, {FC} from 'react';
-import {TouchableOpacity} from 'react-native';
+import {Text, TouchableOpacity} from 'react-native';
 import {ReturnComponentType} from 'types/common/returnComponentType';
 import {styles} from './styles';
 
@@ -10,8 +10,8 @@
   const {icon, onPress} = props;
 
   return (
-    <TouchableOpacity style={styles.icon} onPress={onPress}>
-      {icon}
+    <TouchableOpacity style={[styles.icon]} onPress={onPress}>
+      <Text style={{color: '#fff'}}>{icon}</Text>
     </TouchableOpacity>
   );
 };
Index: src/components/navigation/tasksNavigation/buttons/createTaskListButton/createTaskListButton.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/tasksNavigation/buttons/createTaskListButton/createTaskListButton.tsx b/src/components/navigation/tasksNavigation/buttons/createTaskListButton/createTaskListButton.tsx
--- a/src/components/navigation/tasksNavigation/buttons/createTaskListButton/createTaskListButton.tsx	(revision e320ecf02c427e7a8360fac5e05183264c29c785)
+++ b/src/components/navigation/tasksNavigation/buttons/createTaskListButton/createTaskListButton.tsx	(date 1647594478953)
@@ -2,10 +2,10 @@
 import {FontAwesomeIcon} from '@fortawesome/react-native-fontawesome';
 import React, {useState} from 'react';
 import {useDispatch} from 'react-redux';
+import {TaskListType} from 'store/reducers/taskListReducer/types';
+import {ReturnComponentType} from 'types/common/returnComponentType';
 import {iconSizeLarge} from '../../../../../constants/constants';
 import {addNewTaskList} from '../../../../../store/actions/tasksActions/taskListActions';
-import {TaskListType} from '../../../../../store/reducers/taskListReducer/types';
-import {ReturnComponentType} from '../../../../../types/common/returnComponentType';
 import {Input} from '../../../../common/input/Input';
 import {ModalIcon} from '../../../../common/modals/ModalIcon';
 
@@ -32,7 +32,13 @@
     <ModalIcon
       okHandler={() => createTaskList()}
       description={'Enter new task list title:'}
-      buttonIcon={<FontAwesomeIcon icon={faPlus} size={iconSizeLarge} />}>
+      buttonIcon={
+        <FontAwesomeIcon
+          icon={faPlus}
+          size={iconSizeLarge}
+          style={{color: '#fff'}}
+        />
+      }>
       <Input value={newTaskListTitle} onValueChange={setNewTaskListTitle} />
     </ModalIcon>
   );
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	(revision e320ecf02c427e7a8360fac5e05183264c29c785)
+++ b/package.json	(date 1647528487195)
@@ -14,7 +14,6 @@
     "@fortawesome/free-solid-svg-icons": "^6.0.0",
     "@fortawesome/react-native-fontawesome": "^0.2.7",
     "@react-native-async-storage/async-storage": "^1.16.1",
-    "@react-navigation/bottom-tabs": "^6.2.0",
     "@react-navigation/material-top-tabs": "^6.1.1",
     "@react-navigation/native": "^6.0.8",
     "@react-navigation/native-stack": "^6.5.0",
Index: src/components/common/buttons/CustomTextButton.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/common/buttons/CustomTextButton.tsx b/src/components/common/buttons/CustomTextButton.tsx
--- a/src/components/common/buttons/CustomTextButton.tsx	(revision e320ecf02c427e7a8360fac5e05183264c29c785)
+++ b/src/components/common/buttons/CustomTextButton.tsx	(date 1647596045275)
@@ -1,7 +1,6 @@
 import {CustomTextButtonPropsType} from 'components/common/buttons/type';
 import React, {FC} from 'react';
 import {Text, TouchableOpacity} from 'react-native';
-import {ReturnComponentType} from 'types/common/returnComponentType';
 import {styles} from './styles';
 
 export const CustomTextButton: FC<CustomTextButtonPropsType> = (props) => {
Index: src/components/navigation/Navigation.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/Navigation.tsx b/src/components/navigation/Navigation.tsx
--- a/src/components/navigation/Navigation.tsx	(revision e320ecf02c427e7a8360fac5e05183264c29c785)
+++ b/src/components/navigation/Navigation.tsx	(date 1647594728451)
@@ -3,6 +3,7 @@
 import {createBottomTabNavigator} from '@react-navigation/bottom-tabs';
 import {NavigationContainer} from '@react-navigation/native';
 import React from 'react';
+import {View} from 'react-native';
 import {SafeAreaProvider} from 'react-native-safe-area-context';
 import {ReturnComponentType} from 'types/common/returnComponentType';
 import {iconSizeMedium} from '../../constants/constants';
@@ -10,6 +11,7 @@
 import {SignInScreen} from '../screens/signInScreen/signInScreen';
 import {styles} from './styles';
 import {TasksNavigator} from './tasksNavigation/TasksNavigator';
+import {CreateTaskListButton} from './tasksNavigation/buttons/createTaskListButton/createTaskListButton';
 import {RootTabParamListType} from './types';
 
 const RootTab = createBottomTabNavigator<RootTabParamListType>();
@@ -21,25 +23,50 @@
         <RootTab.Navigator
           initialRouteName={NAVIGATION.TASKS}
           screenOptions={({route}) => ({
-            tabBarIcon: ({focused}) => (
-              <FontAwesomeIcon
-                style={focused ? styles.tabLightIcon : styles.tabDarkIcon}
-                icon={route.name === NAVIGATION.TASKS ? faFile : faUser}
-                size={iconSizeMedium}
-              />
-            ),
-            headerShown: false,
+            headerRight: () => {
+              if (route.name === NAVIGATION.TASKS) {
+                return (
+                  <View style={styles.buttonContainer}>
+                    <CreateTaskListButton />
+                  </View>
+                );
+              }
+            },
+            headerStyle: styles.header,
+            headerTitleStyle: styles.headerTitleStyle,
             tabBarStyle: styles.tabBarContainer,
             tabBarActiveBackgroundColor: 'purple',
             tabBarActiveTintColor: '#fff',
-            tabBarInactiveTintColor: '#123',
+            tabBarInactiveTintColor: '#000',
+            tabBarIconStyle: styles.icon,
+            tabBarLabelStyle: styles.title,
           })}>
           <RootTab.Screen
             name={NAVIGATION.TASKS}
             component={TasksNavigator}
-            options={{}}
+            options={() => ({
+              tabBarIcon: ({focused}) => (
+                <FontAwesomeIcon
+                  style={focused ? styles.tabLightIcon : styles.tabDarkIcon}
+                  icon={faFile}
+                  size={iconSizeMedium}
+                />
+              ),
+            })}
           />
-          <RootTab.Screen name={NAVIGATION.SIGN_IN} component={SignInScreen} />
+          <RootTab.Screen
+            name={NAVIGATION.SIGN_IN}
+            component={SignInScreen}
+            options={() => ({
+              tabBarIcon: ({focused}) => (
+                <FontAwesomeIcon
+                  style={focused ? styles.tabLightIcon : styles.tabDarkIcon}
+                  icon={faUser}
+                  size={iconSizeMedium}
+                />
+              ),
+            })}
+          />
         </RootTab.Navigator>
       </NavigationContainer>
     </SafeAreaProvider>
Index: src/components/navigation/tasksNavigation/TasksNavigator.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/tasksNavigation/TasksNavigator.tsx b/src/components/navigation/tasksNavigation/TasksNavigator.tsx
--- a/src/components/navigation/tasksNavigation/TasksNavigator.tsx	(revision e320ecf02c427e7a8360fac5e05183264c29c785)
+++ b/src/components/navigation/tasksNavigation/TasksNavigator.tsx	(date 1647596287744)
@@ -1,158 +1,54 @@
 import {faCheck, faListCheck} from '@fortawesome/free-solid-svg-icons';
 import {FontAwesomeIcon} from '@fortawesome/react-native-fontawesome';
-import {createBottomTabNavigator} from '@react-navigation/bottom-tabs';
+import {createMaterialTopTabNavigator} from '@react-navigation/material-top-tabs';
 import React from 'react';
-import {FlatList, ListRenderItem, Text, View} from 'react-native';
-import {useSelector} from 'react-redux';
-import {TaskListType} from 'store/reducers/taskListReducer/types';
 import {ReturnComponentType} from 'types/common/returnComponentType';
 import {iconSizeLarge} from '../../../constants/constants';
 import {NAVIGATION_TASKS} from '../../../enums/taskListsEnum';
-import {getTaskList} from '../../../store/selectors/taskListSelectors';
-import {TaskList} from '../../common/taskList/TaskList';
-import {CreateTaskListButton} from './buttons/createTaskListButton/createTaskListButton';
+import {DoneTasksScreen} from './screens/DoneTaskScreen/DoneTaskScreen';
+import {TodoTasksScreen} from './screens/TodoTaskScreen/TodoTaskScreen';
+import {TabParamsListType} from './screens/types';
 import {styles} from './styles';
-import {TabParamListType} from './types';
 
-const TasksScreenTab = createBottomTabNavigator<TabParamListType>();
+const Tab = createMaterialTopTabNavigator<TabParamsListType>();
 
 export const TasksNavigator = (): ReturnComponentType => {
-  const taskLists = useSelector(getTaskList);
-
-  const toDoTaskLists = taskLists.filter((taskList) => {
-    if (taskList.showInToDo || taskList.tasks.some((task) => !task.isDone)) {
-      return taskList;
-    }
-  });
-  const doneTaskLists = taskLists.filter((taskList) => {
-    if (taskList.tasks) {
-      return taskList.tasks.some((task) => task.isDone);
-    }
-  });
-
-  const toDoTaskListRenderItem: ListRenderItem<TaskListType> = ({
-    item,
-  }): ReturnComponentType => {
-    const toDoTasks = item.tasks && item.tasks.filter((task) => !task.isDone);
-    return (
-      <TaskList
-        isTodoTaskList={true}
-        taskListId={item.id}
-        taskListTitle={item.title}
-        taskListPropsTasks={toDoTasks}
-        fullTaskList={item}
-      />
-    );
-  };
-  const doneTaskListRenderItem: ListRenderItem<TaskListType> = ({
-    item,
-  }): ReturnComponentType => {
-    const doneTasks = item.tasks && item.tasks.filter((task) => task.isDone);
-    return (
-      <TaskList
-        isTodoTaskList={false}
-        taskListId={item.id}
-        taskListTitle={item.title}
-        taskListPropsTasks={doneTasks}
-        fullTaskList={item}
-      />
-    );
-  };
-
-  const TodoTasksScreen = (): ReturnComponentType => {
-    return (
-      <>
-        {toDoTaskLists && toDoTaskLists.length > 0 ? (
-          <View style={styles.tasksListContainer}>
-            <FlatList
-              data={toDoTaskLists}
-              renderItem={toDoTaskListRenderItem}
-            />
-          </View>
-        ) : (
-          <View style={styles.nullContentContainer}>
-            <Text style={styles.nullContentText}>
-              Todo task lists is not found
-            </Text>
-          </View>
-        )}
-      </>
-    );
-  };
-
-  const DoneTasksScreen = (): ReturnComponentType => {
-    return (
-      <>
-        {doneTaskLists && doneTaskLists.length > 0 ? (
-          <View style={styles.tasksListContainer}>
-            <FlatList
-              data={doneTaskLists}
-              renderItem={doneTaskListRenderItem}
-            />
-          </View>
-        ) : (
-          <View style={styles.nullContentContainer}>
-            <Text style={styles.nullContentText}>
-              Done task lists is not found
-            </Text>
-          </View>
-        )}
-      </>
-    );
-  };
-
   return (
-    <TasksScreenTab.Navigator
+    <Tab.Navigator
       initialRouteName={NAVIGATION_TASKS.TASKS}
-      screenOptions={({route}) => ({
-        tabBarIcon: ({focused}) => {
-          switch (route.name) {
-            case NAVIGATION_TASKS.TASKS:
-              return focused ? (
-                <FontAwesomeIcon
-                  style={styles.tabLightIcon}
-                  icon={faListCheck}
-                  size={iconSizeLarge}
-                />
-              ) : (
-                <FontAwesomeIcon icon={faListCheck} size={iconSizeLarge} />
-              );
-            case NAVIGATION_TASKS.DONE_TASKS:
-              return focused ? (
-                <FontAwesomeIcon
-                  style={styles.tabLightIcon}
-                  icon={faCheck}
-                  size={iconSizeLarge}
-                />
-              ) : (
-                <FontAwesomeIcon icon={faCheck} size={iconSizeLarge} />
-              );
-            default:
-              return <FontAwesomeIcon icon={faCheck} size={iconSizeLarge} />;
-          }
-        },
-        headerRight: () => {
-          if (route.name === NAVIGATION_TASKS.TASKS) {
-            return (
-              <View style={styles.buttonContainer}>
-                <CreateTaskListButton />
-              </View>
-            );
-          }
-        },
-        tabBarStyle: styles.tabBarContainer,
-        tabBarActiveBackgroundColor: '#0000dd',
-        tabBarActiveTintColor: '#fff',
-        tabBarInactiveTintColor: '#123',
-      })}>
-      <TasksScreenTab.Screen
-        name={NAVIGATION_TASKS.TASKS}
-        component={TodoTasksScreen}
+      screenOptions={() => ({
+        tabBarStyle: styles.tabBarContainer,
+        tabBarItemStyle: styles.tabBarItem,
+        tabBarActiveTintColor: 'purple',
+        tabBarInactiveTintColor: '#000',
+        tabBarIndicatorStyle: styles.tabBarIndicator,
+      })}>
+      <Tab.Screen
+        name={NAVIGATION_TASKS.TASKS}
+        component={TodoTasksScreen}
+        options={() => ({
+          tabBarIcon: ({focused}) => (
+            <FontAwesomeIcon
+              style={focused ? styles.tabLightIcon : styles.tabDarkIcon}
+              icon={faListCheck}
+              size={iconSizeLarge}
+            />
+          ),
+        })}
+      />
+      <Tab.Screen
+        name={NAVIGATION_TASKS.DONE_TASKS}
+        component={DoneTasksScreen}
+        options={() => ({
+          tabBarIcon: ({focused}) => (
+            <FontAwesomeIcon
+              style={focused ? styles.tabLightIcon : styles.tabDarkIcon}
+              icon={faCheck}
+              size={iconSizeLarge}
+            />
+          ),
+        })}
       />
-      <TasksScreenTab.Screen
-        name={NAVIGATION_TASKS.DONE_TASKS}
-        component={DoneTasksScreen}
-      />
-    </TasksScreenTab.Navigator>
+    </Tab.Navigator>
   );
 };
Index: src/components/navigation/tasksNavigation/screens/DoneTaskScreen/DoneTaskScreen.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/tasksNavigation/screens/DoneTaskScreen/DoneTaskScreen.tsx b/src/components/navigation/tasksNavigation/screens/DoneTaskScreen/DoneTaskScreen.tsx
new file mode 100644
--- /dev/null	(date 1647594377194)
+++ b/src/components/navigation/tasksNavigation/screens/DoneTaskScreen/DoneTaskScreen.tsx	(date 1647594377194)
@@ -0,0 +1,48 @@
+import React from 'react';
+import {FlatList, ListRenderItem, Text, View} from 'react-native';
+import {useSelector} from 'react-redux';
+import {TaskListType} from 'store/reducers/taskListReducer/types';
+import {getTaskList} from '../../../../../store/selectors/taskListSelectors';
+import {ReturnComponentType} from '../../../../../types/common/returnComponentType';
+import {TaskList} from '../../../../common/taskList/TaskList';
+import {styles} from './styles';
+
+export const DoneTasksScreen = (): ReturnComponentType => {
+  const taskLists = useSelector(getTaskList);
+  const doneTaskLists = taskLists.filter((taskList) => {
+    if (taskList.tasks) {
+      return taskList.tasks.some((task) => task.isDone);
+    }
+  });
+
+  const doneTaskListRenderItem: ListRenderItem<TaskListType> = ({
+    item,
+  }): ReturnComponentType => {
+    const doneTasks = item.tasks && item.tasks.filter((task) => task.isDone);
+    return (
+      <TaskList
+        isTodoTaskList={false}
+        taskListId={item.id}
+        taskListTitle={item.title}
+        taskListPropsTasks={doneTasks}
+        fullTaskList={item}
+      />
+    );
+  };
+
+  return (
+    <>
+      {doneTaskLists && doneTaskLists.length > 0 ? (
+        <View style={styles.tasksListContainer}>
+          <FlatList data={doneTaskLists} renderItem={doneTaskListRenderItem} />
+        </View>
+      ) : (
+        <View style={styles.nullContentContainer}>
+          <Text style={styles.nullContentText}>
+            Done task lists is not found
+          </Text>
+        </View>
+      )}
+    </>
+  );
+};
Index: src/components/navigation/tasksNavigation/styles.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/tasksNavigation/styles.ts b/src/components/navigation/tasksNavigation/styles.ts
--- a/src/components/navigation/tasksNavigation/styles.ts	(revision e320ecf02c427e7a8360fac5e05183264c29c785)
+++ b/src/components/navigation/tasksNavigation/styles.ts	(date 1647591905401)
@@ -1,43 +1,32 @@
 import {FontAwesomeIconStyle} from '@fortawesome/react-native-fontawesome';
-import {StyleSheet, TextStyle, ViewStyle} from 'react-native';
-import {taskListMarginVertical} from '../../common/taskList/styles';
+import {StyleSheet, ViewStyle} from 'react-native';
 
 type TasksScreenStylesType = {
-  tasksListContainer: ViewStyle;
-  nullContentContainer: ViewStyle;
   tabBarContainer: ViewStyle;
+  tabBarItem: ViewStyle;
   tabLightIcon: FontAwesomeIconStyle;
-  buttonContainer: ViewStyle;
-  nullContentText: TextStyle;
+  tabDarkIcon: FontAwesomeIconStyle;
+  tabBarIndicator: ViewStyle;
 };
 
 export const styles = StyleSheet.create<TasksScreenStylesType>({
-  tasksListContainer: {
-    backgroundColor: '#eee',
-    paddingVertical: taskListMarginVertical,
-  },
-
-  nullContentContainer: {
-    height: '100%',
-    alignItems: 'center',
-    justifyContent: 'center',
-  },
-
-  nullContentText: {
-    fontSize: 22,
-    color: '#000',
-  },
-
   tabBarContainer: {
-    height: 50,
     backgroundColor: '#fff',
   },
 
+  tabBarItem: {
+    height: 60,
+  },
+
   tabLightIcon: {
-    color: '#fff',
+    color: 'purple',
+  },
+
+  tabDarkIcon: {
+    color: '#000',
   },
 
-  buttonContainer: {
-    marginRight: 10,
+  tabBarIndicator: {
+    backgroundColor: 'darkmagenta',
   },
 });
Index: src/components/navigation/styles.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/styles.ts b/src/components/navigation/styles.ts
--- a/src/components/navigation/styles.ts	(revision e320ecf02c427e7a8360fac5e05183264c29c785)
+++ b/src/components/navigation/styles.ts	(date 1647533348580)
@@ -1,15 +1,29 @@
 import {FontAwesomeIconStyle} from '@fortawesome/react-native-fontawesome';
-import {StyleSheet, ViewStyle} from 'react-native';
+import {StyleSheet, TextStyle, ViewStyle} from 'react-native';
 
 type NavigationStylesType = {
+  header: ViewStyle;
+  headerTitleStyle: TextStyle;
   tabBarContainer: ViewStyle;
   tabLightIcon: FontAwesomeIconStyle;
   tabDarkIcon: FontAwesomeIconStyle;
+  buttonContainer: ViewStyle;
+  icon: TextStyle;
+  title: TextStyle;
 };
 
 export const styles = StyleSheet.create<NavigationStylesType>({
+  header: {
+    backgroundColor: '#610061',
+  },
+
+  headerTitleStyle: {
+    color: '#fff',
+    fontSize: 22,
+  },
+
   tabBarContainer: {
-    height: 50,
+    height: 55,
     backgroundColor: '#fff',
   },
 
@@ -20,4 +34,16 @@
   tabDarkIcon: {
     color: '#000',
   },
+
+  buttonContainer: {
+    marginRight: 10,
+  },
+
+  icon: {
+    marginTop: 5,
+  },
+
+  title: {
+    fontSize: 16,
+  },
 });
Index: src/components/navigation/tasksNavigation/screens/types.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/tasksNavigation/screens/types.ts b/src/components/navigation/tasksNavigation/screens/types.ts
new file mode 100644
--- /dev/null	(date 1647592728205)
+++ b/src/components/navigation/tasksNavigation/screens/types.ts	(date 1647592728205)
@@ -0,0 +1,4 @@
+export type TabParamsListType = {
+  'Todo tasks': undefined;
+  'Done tasks': undefined;
+};
Index: src/components/navigation/tasksNavigation/screens/TodoTaskScreen/styles.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/navigation/tasksNavigation/screens/TodoTaskScreen/styles.ts b/src/components/navigation/tasksNavigation/screens/TodoTaskScreen/styles.ts
new file mode 100644
--- /dev/null	(date 1647591853519)
+++ b/src/components/navigation/tasksNavigation/screens/TodoTaskScreen/styles.ts	(date 1647591853519)
@@ -0,0 +1,26 @@
+import {StyleSheet, TextStyle, ViewStyle} from 'react-native';
+import {taskListMarginVertical} from '../../../../common/taskList/styles';
+
+type TodoTasksScreenStylesType = {
+  tasksListContainer: ViewStyle;
+  nullContentContainer: ViewStyle;
+  nullContentText: TextStyle;
+};
+
+export const styles = StyleSheet.create<TodoTasksScreenStylesType>({
+  tasksListContainer: {
+    backgroundColor: '#eee',
+    paddingVertical: taskListMarginVertical,
+  },
+
+  nullContentContainer: {
+    height: '100%',
+    alignItems: 'center',
+    justifyContent: 'center',
+  },
+
+  nullContentText: {
+    fontSize: 22,
+    color: '#000',
+  },
+});
Index: android/app/src/main/res/layout/launch_screen.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/app/src/main/res/layout/launch_screen.xml b/android/app/src/main/res/layout/launch_screen.xml
--- a/android/app/src/main/res/layout/launch_screen.xml	(revision e320ecf02c427e7a8360fac5e05183264c29c785)
+++ b/android/app/src/main/res/layout/launch_screen.xml	(date 1647588749993)
@@ -9,17 +9,16 @@
                     android:src="@drawable/iconoriginal"
                     android:layout_width="180dp"
                     android:layout_height="180dp"
-                    android:layout_centerHorizontal="true"
-                    android:layout_marginTop="42mm"
+                    android:layout_centerInParent="true"
                     />
                 <TextView
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
                     android:layout_centerHorizontal="true"
-                    android:text="ToDo list"
+                    android:text="ToDo List"
                     android:layout_below="@+id/logo"
                     android:textStyle="bold"
-                    android:textSize="50sp"
+                    android:textSize="45sp"
                     android:layout_marginTop="10dp"
                     android:textColor="#fff"
                     />
